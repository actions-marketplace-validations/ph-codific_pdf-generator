# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters :
  # symfony performance optimization for production
  container.dumper.inline_factories : true
  container.dumper.inline_class_loader : true
  # /symfony performance optimization for production
  locale : 'en'
  app.instance : '%env(APP_INSTANCE)%'
  # This parameter defines the codes of the locales (languages) enabled in the application
  app_locales : en
  session.timeout: 10800 # in seconds, kill session no matter what after this amount of time (php session timeout is skipped)
  session.extend_timeout: 1800 # in seconds, number of seconds before session expiration to show the pop-up to extend it

services :
  # default configuration for services in *this* file
  _defaults :
    autowire : true      # Automatically injects dependencies in your services.
    autoconfigure : true # Automatically registers your services as commands, event subscribers, etc.
    bind : # defines the scalar arguments once and apply them to any service defined/created in this file
      $locales : '%app_locales%'
      $defaultLocale : '%locale%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\ :
    resource : '../src/*'
    exclude : '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\ :
    resource : '../src/Controller'
    tags : [ 'controller.service_arguments' ]

  monolog.processor.web :
    class : Symfony\Bridge\Monolog\Processor\WebProcessor
    tags :
      - { name : monolog.processor }

  App\Translator\Translator :
    decorates : translator

  Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
    arguments:
      - '@Redis'
      - { prefix: 'session:' }

  Redis:
    class: App\Handler\Redis
    arguments:
      - '%env(REDIS_HOST)%'
      - '%env(REDIS_PORT)%'
      - null
      - '%env(APP_INSTANCE)%_'

  app.cache.adapter.redis:
    parent: 'cache.adapter.redis'
    tags:
      - { name: 'cache.pool', namespace: 'sammy_cache' }

  Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter :
    alias : framework_extra_bundle.argument_name_convertor

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
